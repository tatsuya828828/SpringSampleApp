# エラーメッセージ用のファイル
# データバインドのエラーメッセージの書き方
# typeMismatch.ModelAttributeのキー名.フィールド名 = エラーメッセージ
# typeMismatch.フィールド名 = エラーメッセージ
# typeMismatch.フィールドのデータ型 = エラーメッセージ

# ユーザーID
# エラーメッセージの中にフィールド名を含めたい場合は{0}とメッセージ内に入力することでフォームクラスのフィールド名を出してくれる
# しかしフィールド名がuserIdだとすると「userIdを入力してください」と表示されるため
# Model.Attribute名.フィールド名 = 任意のフィールド名		とすることでユーザーにわかりやすく伝えることができる
signupForm.userId= ユーザーID
NotBlank.signupForm.userId = {0}を入力してください
Email.signupForm.userId = {0}にはメールアドレスを入力してください

# パスワード
password = パスワード
NotBlank.password = {0}を入力してください
# 「パスワードは4桁以上、100桁以下で入力してください」と表示したい場合は、{1}や{2}を使うことでmaxやminで指定した値が代入される
# どのパラメータがどの数値に入るかは、パラメータの昇順で決まる
Length.password = {0}は、{2}桁以上、{1}桁以下で入力してください
Pattern.password = {0}は、半角英数字で入力してください

# ユーザー名
userName = ユーザー名
NotBlank.userName = {0}を入力してください

# 誕生日
birthday = 誕生日
NotNull.birthday = {0}を入力してください
typeMismatch.birthday = yyyy/MM/dd形式で入力してください

# 年齢
age = 年齢
Min.age = {0}は{1}以上を入力してください
Max.age = {0}は{1}以下を入力してください
typeMismatch.age = 入力内容に間違いがあります

# 結婚ステータス
AssertFalse.marriage = 未婚の方のみ登録できます

# バリデーションエラーメッセージの書き方
# アノテーション名.ModelAttributeのキー名.フィールド名 = エラーメッセージ: NotBlank.signupForm.userId = ユーザーIDを入力してください
# アノテーション名.フィールド名 = エラーメッセージ: NotBlank.userId = ユーザーIDを入力してください
# アノテーション名.フィールドのデータ型 = エラーメッセージ: NotBlank.java.lang.String = 必須入力です
# アノテーション名 = エラーメッセージ: NotBlank = 必須入力です
# 独自のキー名 = エラーメッセージ: require_check = 必須入力です
# 独自のキー名をつける場合はフォームクラスのフィールドと、独自のキー名を紐付けなければならない